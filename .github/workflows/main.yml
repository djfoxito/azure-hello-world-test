# .github/workflows/main.yml para el nuevo proyecto "azure-hello-world-test"

name: Minimal Hello World CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Permisos mínimos necesarios para este workflow
permissions:
  contents: read # Para checkout del código
  id-token: write # Necesario para azure/login con OIDC (si lo usas)

env:
  PYTHON_VERSION: '3.11'
  # NOMBRES DE RECURSOS NUEVOS Y ÚNICOS EN AZURE PARA ESTE PROYECTO DE PRUEBA
  NEW_AZURE_WEBAPP_NAME: 'minimal-hello-app-test' # <-- ¡CAMBIA ESTO! Nombre único para el nuevo App Service
  NEW_AZURE_CONTAINER_REGISTRY_NAME: 'minimalhelloacrtest' # <-- ¡CAMBIA ESTO! Nombre único para el nuevo ACR
  IMAGE_NAME: 'minimal-hello-world' # Nombre de la imagen Docker para este proyecto

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Paso para loguearse en el NUEVO Azure Container Registry
    - name: Log in to New Azure Container Registry
      uses: docker/login-action@v3
      with:
        # Usaremos los secretos del NUEVO ACR (admin user)
        registry: ${{ secrets.NEW_AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.NEW_AZURE_CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.NEW_AZURE_CONTAINER_REGISTRY_PASSWORD }}

    # Paso para construir y empujar la imagen Docker del Hello World
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        # La imagen se taggea con el nombre del nuevo ACR y el SHA del commit
        tags: ${{ secrets.NEW_AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        file: ./Dockerfile # Usará el Dockerfile de este nuevo proyecto
